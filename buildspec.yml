# Substrate builds in AWS CodeBuild
#
# <https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html>
---
version: 0.2

env:
  variables:
    GO_VERSION: 1.18
    PATH: /go/bin:/root/bin:/root/go/bin:/usr/local/bin:/usr/bin:/bin
    # SLACK_WEBHOOK_URL comes from upstream

phases:
  install:
    commands:
      - mkdir -p "$HOME/bin"
      - curl -o"$HOME/awscli.zip" "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
      - unzip -q "$HOME/awscli.zip" -d "$HOME"
      - $HOME/aws/install -b "$HOME/bin" -i "$HOME/aws" --update
      - rm -f "$HOME/awscli.zip"
      - curl -L -o"golang.tar.gz" -s "https://redirector.gvt1.com/edgedl/go/go$GO_VERSION.linux-amd64.tar.gz"
      - tar -C"$HOME" -f"golang.tar.gz" -x
      - rm -f "golang.tar.gz"
      - go get "golang.org/x/tools/cmd/goimports"
      - go install "golang.org/x/tools/cmd/goimports"
      - cat "terraform.version" | xargs -I"VERSION" curl -L -o"terraform.zip" -s "https://releases.hashicorp.com/terraform/VERSION/terraform_VERSION_linux_amd64.zip"
      - unzip "terraform.zip" -d "$HOME/bin"
      - rm -f "terraform.zip"
    finally:
      - go run "tools/slack-codebuild/main.go" "install"
  pre_build:
    commands:
      - go version
      - terraform version
      - make
      - git diff --exit-code
      - make test
    finally:
      - go run "tools/slack-codebuild/main.go" "pre_build"
  build:
    commands:
      - git symbolic-ref -q HEAD || true
      - date +%Y.%m || true
      - git describe --tags HEAD || true
      - git symbolic-ref -q HEAD >/dev/null && date +%Y.%m || git describe --tags HEAD || true
      - make release
    finally:
      - go run "tools/slack-codebuild/main.go" "build"
      - sh "tools/tweet-codebuild.sh"
artifacts:
  files:
    - substrate-*-*-*-*.tar.gz
...
